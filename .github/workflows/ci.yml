name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        
      - name: Check formatting
        run: npm run format:check

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20]
        
    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch full history for git operations in tests
          fetch-depth: 0
          
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Run unit tests
        run: npm test
        
      - name: Run e2e tests
        run: npm run test:e2e
        env:
          # Don't use real AI providers in tests
          OOPS_PROVIDER: ""

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Test package creation
        run: npm pack
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: "*.tgz"

  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          
      - name: Install package globally
        run: |
          npm install -g *.tgz
          
      - name: Test CLI installation
        run: |
          which git-oops
          git-oops --version
          git-oops --help
          
      - name: Test git integration
        run: |
          # Setup test repo
          git config --global user.name "Test User"
          git config --global user.email "test@example.com"
          mkdir test-repo && cd test-repo
          git init
          
          # Test basic commands
          echo "test" > test.txt
          git add test.txt
          git commit -m "initial commit"
          
          # Test that git-oops commands work
          git oops --help
          git oops config
          
          # Test commands that don't require staged changes
          echo "test2" > test2.txt
          git add test2.txt
          git oops split --dry-run || echo "Expected to fail with no provider"
